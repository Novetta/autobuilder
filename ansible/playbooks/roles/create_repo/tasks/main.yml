---
# tasks file for create_repo
- name: save current localtime file
  copy:
    src: /etc/localtime
    dest: /etc/localtime.backup
    reomte_src: yes

- name: remove localtime file
  file:
    path: /etc/localtime
    state: absent

- name: create new localtime link
  file:
    src: /usr/share/zoneinfo/Etc/Universal
    dest: /etc/localtime
    state: link

- name: remove chrony
  yum:
    name: chronyd
    state: absent

- name: install ntp
  yum:
    name: ntp
    state: latest

- name: update ntp.conf
  template:
    source: ntp.conf.j2
    dest: /etc/ntp.conf
    backup: yes
  notify: restart ntpd

- name: create repo directory
  file:
    path: /opt/repo
    state: directory

- name: extract repo files
  unarchive:
    src: "{{ item }}"
    dest: /opt/repo
  with_items:
    - base.tar.gz
    - epel.tar.gz
    - updates.tar.gz
    - extras.tar.gz

- name: find current repo files
  find:
    paths: /etc/yum.repos.d
    patterns: *.repo
  register: repo_files

- name: remove current repo files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ repo_files.files }}"
  notify: yum clean

- name: create local repo (1/4)
  yum_repository:
    name: base_local
    description: CentOS-$releasever - Base Local
    file: local
    baseurl: file:///opt/repo/centos_base/
    gpgcheck: no
    enabled: yes
  notify: yum clean

- name: create local repo (2/4)
  yum_repository:
    name: extras_local
    description: CentOS-$releasever - Extras Local
    file: local
    baseurl: file:///opt/repo/centos_extras/
    gpgcheck: no
    enabled: yes
  notify: yum clean

- name: create local repo (3/4)
  yum_repository:
    name: updates_local
    description: CentOS-$releasever - Updates Local
    file: local
    baseurl: file:///opt/repo/centos_updates/
    gpgcheck: no
    enabled: yes
  notify: yum clean

- name: create local repo (4/4)
  yum_repository:
    name: epel_local
    description: CentOS-$releasever - EPEL Local
    file: local
    baseurl: file:///opt/repo/epel/
    gpgcheck: no
    enabled: yes
  notify: yum clean

- name: yum update
  yum:
    name: '*'
    state: latest

- name: install packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - rsync
      - httpd
      - realmd
      - samba-common-tools
      - sssd

- name: remove packages
  yum:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
      - cups
      - postfix

- name: create apache symlink
  file:
    src: /opt/repo/
    dest: /var/www/html/repo
    state: link

- name: start apache
  service:
    name: httpd
    state: restarted
    enabled: yes

- name: add http service to firewall
  firewalld:
    zone: public
    service: https
    permanent: yes
    state: enabled
  notify: restart firewall

- name: check if machine is realm bound
  shell: /bin/bash -c "realm list | grep sssd"
  register: realmd_bound
  changed_when: false
  ignore_errors: true

- name: join to realm
  command: /bin/bash -c "/usr/sbin/realm join domain1.local"
  when: realmd_bound|failed

- name: modify sssd.conf
  blockinfile:
    path: /etc/sssd/sssd.conf
    insertafter: '^\[sssd\]'
    block: |
      default_domain_suffix = domain1.local
      use_fully_qualified_names = False
  notify: restart sssd
  when: realmd_bound|failed

- name: restrict access
  command: /bin/bash -c "/usr/sbin/realm permit -g domain\ admins@domain1.local"
  when: ewalmd_bound|failed
    
- name: modify rsyslog.conf
  lineinfile:
    path: /etc/rsyslog.conf
    regexp: '^#*.* @@remote'
    line: '*.* @.168.13.5:514'

- name: update sudoers
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%domain\ admins'
    line: '%domain\ admins ALL=(ALL) ALL'
    insertafter: '^%wheel'
    create: yes
    validate: '/sbin/visudo -cf %s'
